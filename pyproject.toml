[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "Flask-Dance"
authors = [{ name = "David Baumgold", email = "david@davidbaumgold.com" }]
maintainers = [{ name = "Daniele Sluijters" }]
readme = "README.rst"
dynamic = ["description", "version"]
license = { file = "LICENSE" }
requires-python = ">=3.6"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Framework :: Flask",
    "Framework :: Pytest",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "requests>=2.0",
    "oauthlib>=3.2",
    "requests-oauthlib>=1.0.0",
    "Flask>=2.0.3",
    "Werkzeug",
    "urlobject",
]

[project.urls]
Documentation = "https://flask-dance.readthedocs.io/"
Source = "https://github.com/singingwolfboy/flask-dance"
Changelog = "https://github.com/singingwolfboy/flask-dance/blob/main/CHANGELOG.rst"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-mock",
    "responses",
    "freezegun",
    "coverage",
    # testing sqlalchemy support
    "sqlalchemy>=1.3.11",
    "flask-sqlalchemy",
    # testing integration with other extensions
    "flask-login",
    "flask-caching",
    "betamax",
    # we need the `signedtoken` extra for `oauthlib`
    "oauthlib[signedtoken]",
]
docs = [
    "sphinx>=1.3",
    "sphinxcontrib-seqdiag",
    "sphinxcontrib-spelling",
    "Flask-Sphinx-Themes",

    # code dependencies, needed for imports
    "sqlalchemy>=1.3.11",
    "pytest",
    "betamax",
]
sqla = ["sqlalchemy>=1.3.11"]
signals = ["blinker"]

[project.entry-points.pytest11]
pytest_flask_dance = "flask_dance.fixtures.pytest"

[tool.flit.module]
name = "flask_dance"

[tool.distutils.bdist_wheel]
universal = true

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
markers = ["install_required: can only pass if flask_dance is installed"]

[tool.coverage.run]
source = ["flask_dance"]
